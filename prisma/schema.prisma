generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                 String         @id @default(uuid())
  username           String         @unique
  password           String
  rol                RolUsuario
  nombre             String
  activo             Boolean        @default(true)
  punto_atencion_id  String?
  correo             String?        @unique
  puntoAtencion      PuntoAtencion? @relation(fields: [punto_atencion_id], references: [id])

  jornadas     Jornada[]
  cambios      CambioDivisa[]
  movimientos  Movimiento[]
  solicitudes  SolicitudSaldo[]
  cuadresCaja  CuadreCaja[]
}

model PuntoAtencion {
  id           String         @id @default(uuid())
  nombre       String
  direccion    String
  ciudad       String
  provincia    String
  codigoPostal String
  activo       Boolean        @default(true)

  usuarios       Usuario[]
  saldos         Saldo[]
  jornadas       Jornada[]
  cambios        CambioDivisa[]
  movimientos    Movimiento[]
  solicitudes    SolicitudSaldo[]
  origenTransf   Transferencia[] @relation("TransferenciasOrigen")
  destinoTransf  Transferencia[] @relation("TransferenciasDestino")
  cuadresCaja    CuadreCaja[]
}

model Moneda {
  id              String           @id @default(uuid())
  nombre          String
  simbolo         String
  codigo          String           @unique

  saldos          Saldo[]
  cambiosOrigen   CambioDivisa[]   @relation("MonedaOrigen")
  cambiosDestino  CambioDivisa[]   @relation("MonedaDestino")
  movimientos     Movimiento[]
  solicitudes     SolicitudSaldo[]
  transferencias  Transferencia[]
}

model CambioDivisa {
  id                String         @id @default(uuid())
  fecha             DateTime       @default(now())
  montoOrigen       Float
  montoDestino      Float
  tasaCambio        Float
  tipoOperacion     TipoOperacion   // <-- Agregado
  monedaOrigenId    String
  monedaDestinoId   String
  usuarioId         String
  puntoAtencionId   String
  observacion       String?
  recibo            Recibo?

  monedaOrigen      Moneda         @relation("MonedaOrigen", fields: [monedaOrigenId], references: [id])
  monedaDestino     Moneda         @relation("MonedaDestino", fields: [monedaDestinoId], references: [id])
  usuario           Usuario        @relation(fields: [usuarioId], references: [id])
  puntoAtencion     PuntoAtencion  @relation(fields: [puntoAtencionId], references: [id])
}

model Recibo {
  id          String         @id @default(uuid())
  fecha       DateTime       @default(now())
  contenido   String
  cambioId    String?        @unique

  cambio      CambioDivisa?  @relation(fields: [cambioId], references: [id])
}

model Saldo {
  id              String        @id @default(uuid())
  puntoAtencionId String
  monedaId        String
  cantidad        Float         @default(0)

  puntoAtencion   PuntoAtencion @relation(fields: [puntoAtencionId], references: [id])
  moneda          Moneda        @relation(fields: [monedaId], references: [id])

  @@unique([puntoAtencionId, monedaId])
}

model Movimiento {
  id              String        @id @default(uuid())
  tipo            TipoMovimiento
  monto           Float
  monedaId        String
  usuarioId       String
  puntoAtencionId String
  fecha           DateTime      @default(now())
  descripcion     String?

  moneda          Moneda        @relation(fields: [monedaId], references: [id])
  usuario         Usuario       @relation(fields: [usuarioId], references: [id])
  puntoAtencion   PuntoAtencion @relation(fields: [puntoAtencionId], references: [id])
}

model SolicitudSaldo {
  id              String        @id @default(uuid())
  puntoAtencionId String
  usuarioId       String
  monedaId        String
  montoSolicitado Float
  aprobado        Boolean       @default(false)
  fechaSolicitud  DateTime      @default(now())
  fechaRespuesta  DateTime?

  puntoAtencion   PuntoAtencion @relation(fields: [puntoAtencionId], references: [id])
  usuario         Usuario       @relation(fields: [usuarioId], references: [id])
  moneda          Moneda        @relation(fields: [monedaId], references: [id])
}

model Jornada {
  id              String        @id @default(uuid())
  usuarioId       String
  puntoAtencionId String
  fechaInicio     DateTime      @default(now())
  fechaAlmuerzo   DateTime?
  fechaRegreso    DateTime?
  fechaSalida     DateTime?

  usuario         Usuario       @relation(fields: [usuarioId], references: [id])
  puntoAtencion   PuntoAtencion @relation(fields: [puntoAtencionId], references: [id])
}

model CuadreCaja {
  id              String        @id @default(uuid())
  usuarioId       String
  puntoAtencionId String
  fecha           DateTime      @default(now())
  entradas        Float?
  salidas         Float?
  saldo           Float?
  observaciones   String?
  razonParcial    String? 

  usuario         Usuario       @relation(fields: [usuarioId], references: [id])
  puntoAtencion   PuntoAtencion @relation(fields: [puntoAtencionId], references: [id])
}

model Transferencia {
  id                  String        @id @default(uuid())
  origenId            String
  destinoId           String
  monedaId            String
  monto               Float
  fecha               DateTime      @default(now())
  descripcion         String?

  origen              PuntoAtencion @relation("TransferenciasOrigen", fields: [origenId], references: [id])
  destino             PuntoAtencion @relation("TransferenciasDestino", fields: [destinoId], references: [id])
  moneda              Moneda        @relation(fields: [monedaId], references: [id])
}

enum RolUsuario {
  ADMIN
  OPERADOR
}

enum TipoMovimiento {
  INGRESO
  EGRESO
  TRANSFERENCIA_ENTRANTE
  TRANSFERENCIA_SALIENTE
  CAMBIO_DIVISA
}

enum TipoOperacion {
  COMPRA
  VENTA
}
